spring:
  application:
    name: order-service
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:development}
  
  # 데이터베이스 설정
  datasource:
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/orderdb}
    username: ${DATABASE_USERNAME:orderuser}
    password: ${DATABASE_PASSWORD:orderpass}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: ${DATABASE_MAX_POOL_SIZE:20}
      minimum-idle: ${DATABASE_MIN_IDLE:5}
      connection-timeout: ${DATABASE_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${DATABASE_IDLE_TIMEOUT:600000}
      max-lifetime: ${DATABASE_MAX_LIFETIME:1800000}
  
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:validate}
    show-sql: ${JPA_SHOW_SQL:false}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
    open-in-view: false
  
  # Redis 설정
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: ${REDIS_TIMEOUT:2000ms}
      lettuce:
        pool:
          max-active: ${REDIS_MAX_ACTIVE:8}
          max-idle: ${REDIS_MAX_IDLE:8}
          min-idle: ${REDIS_MIN_IDLE:0}
          max-wait: ${REDIS_MAX_WAIT:-1ms}

# 서버 설정
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  error:
    include-message: always
    include-binding-errors: always

# 로깅 설정
logging:
  level:
    com.eksmsa.learning.orderservice: ${LOG_LEVEL:INFO}
    org.springframework.web: ${WEB_LOG_LEVEL:WARN}
    org.hibernate.SQL: ${SQL_LOG_LEVEL:WARN}
    org.hibernate.type.descriptor.sql.BasicBinder: ${SQL_PARAM_LOG_LEVEL:WARN}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%logger{36}] - %msg%n"

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: ${MANAGEMENT_ENDPOINTS:health,info,metrics,prometheus}
      base-path: /actuator
  endpoint:
    health:
      show-details: ${MANAGEMENT_HEALTH_SHOW_DETAILS:when_authorized}
      show-components: always
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: ${PROMETHEUS_METRICS_ENABLED:true}
    tags:
      application: ${spring.application.name}
      environment: ${ENVIRONMENT:development}
  health:
    redis:
      enabled: true
    db:
      enabled: true

# 애플리케이션 정보
info:
  app:
    name: ${spring.application.name}
    description: "EKS MSA Learning Platform - Order Service"
    version: "1.0.0"
    encoding: UTF-8
    java:
      version: ${java.version}

---
# Development 프로파일
spring:
  config:
    activate:
      on-profile: development
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  
logging:
  level:
    com.eksmsa.learning.orderservice: DEBUG
    org.springframework.web: DEBUG

---
# Production 프로파일
spring:
  config:
    activate:
      on-profile: production
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  
logging:
  level:
    com.eksmsa.learning.orderservice: INFO
    org.springframework.web: WARN
    
management:
  endpoint:
    health:
      show-details: never

---
# Test 프로파일
spring:
  config:
    activate:
      on-profile: test
  
  datasource:
    url: jdbc:h2:mem:testdb
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
  
  h2:
    console:
      enabled: true