# Application Service Accounts
# 각 마이크로서비스를 위한 ServiceAccount 및 RBAC 설정

---
# Frontend ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-sa
  namespace: frontend
  labels:
    app.kubernetes.io/name: frontend-sa
    app.kubernetes.io/part-of: eks-msa-learning
    app.kubernetes.io/component: frontend
  annotations:
    # IRSA (IAM Roles for Service Accounts) 설정
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/eks-msa-learning-frontend-role
automountServiceAccountToken: false

---
# Main Service ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: main-service-sa
  namespace: backend
  labels:
    app.kubernetes.io/name: main-service-sa
    app.kubernetes.io/part-of: eks-msa-learning
    app.kubernetes.io/component: api-gateway
  annotations:
    # IRSA 설정 - S3 접근 권한 포함
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/eks-msa-learning-main-service-role
automountServiceAccountToken: true

---
# Catalog Service ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: catalog-service-sa
  namespace: backend
  labels:
    app.kubernetes.io/name: catalog-service-sa
    app.kubernetes.io/part-of: eks-msa-learning
    app.kubernetes.io/component: catalog
  annotations:
    # IRSA 설정 - RDS 및 ElastiCache 접근 권한 포함
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/eks-msa-learning-catalog-service-role
automountServiceAccountToken: true

---
# Order Service ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: order-service-sa
  namespace: backend
  labels:
    app.kubernetes.io/name: order-service-sa
    app.kubernetes.io/part-of: eks-msa-learning
    app.kubernetes.io/component: order
  annotations:
    # IRSA 설정 - RDS 및 ElastiCache 접근 권한 포함
    eks.amazonaws.com/role-arn: arn:aws:iam::${AWS_ACCOUNT_ID}:role/eks-msa-learning-order-service-role
automountServiceAccountToken: true

---
# Application Role (공통 권한)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: backend
  name: application-role
  labels:
    app.kubernetes.io/name: application-role
    app.kubernetes.io/part-of: eks-msa-learning
rules:
# ConfigMap 읽기 권한
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
# Secret 읽기 권한 (필요한 경우)
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# Pod 정보 읽기 권한 (헬스체크용)
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
  resourceNames: []

---
# Main Service RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: main-service-binding
  namespace: backend
  labels:
    app.kubernetes.io/name: main-service-binding
    app.kubernetes.io/part-of: eks-msa-learning
subjects:
- kind: ServiceAccount
  name: main-service-sa
  namespace: backend
roleRef:
  kind: Role
  name: application-role
  apiGroup: rbac.authorization.k8s.io

---
# Catalog Service RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: catalog-service-binding
  namespace: backend
  labels:
    app.kubernetes.io/name: catalog-service-binding
    app.kubernetes.io/part-of: eks-msa-learning
subjects:
- kind: ServiceAccount
  name: catalog-service-sa
  namespace: backend
roleRef:
  kind: Role
  name: application-role
  apiGroup: rbac.authorization.k8s.io

---
# Order Service RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: order-service-binding
  namespace: backend
  labels:
    app.kubernetes.io/name: order-service-binding
    app.kubernetes.io/part-of: eks-msa-learning
subjects:
- kind: ServiceAccount
  name: order-service-sa
  namespace: backend
roleRef:
  kind: Role
  name: application-role
  apiGroup: rbac.authorization.k8s.io

---
# Frontend Role (최소 권한)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: frontend
  name: frontend-role
  labels:
    app.kubernetes.io/name: frontend-role
    app.kubernetes.io/part-of: eks-msa-learning
rules:
# ConfigMap 읽기 권한만 부여
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]

---
# Frontend RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: frontend-binding
  namespace: frontend
  labels:
    app.kubernetes.io/name: frontend-binding
    app.kubernetes.io/part-of: eks-msa-learning
subjects:
- kind: ServiceAccount
  name: frontend-sa
  namespace: frontend
roleRef:
  kind: Role
  name: frontend-role
  apiGroup: rbac.authorization.k8s.io